FROM bellsoft/liberica-openjdk-debian:latest-cds

ENV DEBIAN_FRONTEND=noninteractive

# Install required packages using Debian package manager
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    bash \
    git \
    curl \
    unzip \
    openssh-server \
    openssh-client \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Ensure sshd runtime directories exist
RUN mkdir -p /run/sshd /var/run/sshd

# Create user and set a simple password for development use
RUN adduser --disabled-password --comment "dev user" --shell /bin/bash dev && \
    echo "dev:dev" | chpasswd

# Create code and ssh directories and set proper ownership/permissions
RUN mkdir -p /code /home/dev/.ssh && \
    chown -R dev:dev /code /home/dev/.ssh && \
    chmod 700 /home/dev/.ssh

# Generate host keys if necessary
RUN ssh-keygen -A || true

# Configure SSH daemon (additional configuration file)
RUN mkdir -p /etc/ssh/sshd_config.d && \
    cat <<'EOF' > /etc/ssh/sshd_config.d/user-dev-enable.conf
# PermitRootLogin no
PasswordAuthentication no
PubkeyAuthentication yes
ListenAddress 0.0.0.0
ListenAddress ::
# HostKey /etc/ssh/ssh_host_ed25519_key
AllowUsers dev
EOF

EXPOSE 22

VOLUME ["/code"]

# Entrypoint script: generates host key if missing, copies user keys if provided, and starts sshd
RUN cat > /entrypoint.sh <<'EOF' && chmod +x /entrypoint.sh
#!/usr/bin/env bash
set -e

# Generate host key if not present
# if [[ ! -f /etc/ssh/ssh_host_ed25519_key ]]; then
#     echo "Generating host key"
#     ssh-keygen -t ed25519 -C "default key" -N "" -f "/etc/ssh/ssh_host_ed25519_key"
# fi

# Copy provided host-mounted keys into the dev user's .ssh
if [[ -f /home/dev/host/ssh_key_public ]]; then
    echo "Copy public key to authorized_keys"
    cp /home/dev/host/ssh_key_public /home/dev/.ssh/authorized_keys
    chown dev:dev /home/dev/.ssh/authorized_keys
    chmod 400 /home/dev/.ssh/authorized_keys
fi

if [[ -f /home/dev/host/ssh_key_private ]]; then
    echo "Copy private key to ssh folder"
    cp /home/dev/host/ssh_key_private /home/dev/.ssh/id_ed25519
    chown dev:dev /home/dev/.ssh/id_ed25519
    chmod 400 /home/dev/.ssh/id_ed25519
fi

# If no authorized_keys, don't start sshd to avoid allowing password auth; keep container alive for debugging
if [[ ! -f /home/dev/.ssh/authorized_keys ]]; then
    echo "No authorized key file found. Cannot enable sshd. Running tail -f /dev/null"
    exec tail -f /dev/null
else
    echo "Starting sshd server"
    exec /usr/sbin/sshd -De
fi
EOF

ENTRYPOINT [ "/entrypoint.sh" ]
